% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/function.R
\name{to_simple_names}
\alias{to_simple_names}
\title{Convert Long File Paths to Simple Paths}
\usage{
to_simple_names(paths, method = 1L, get_base = NULL, sha1_digits = 4)
}
\arguments{
\item{paths}{vector of character containing file paths}

\item{method}{\code{method = 1}: file names generated match the pattern
\code{file_<xx>} with \code{<xx>} being an integer number of two digits.
\code{method = 2}: file names generated match the pattern \code{file_<sha>}
with \code{<sha>} being the first \code{sha1_digits} digits of the sha1
hash (see e.g. \url{http://www.sha1-online.com/}) of the base names of the
\code{paths}. By default, the base name is the file name (without folder
path) without extension. The base names can be determined individually by
providing a function in \code{get_base}}

\item{get_base}{function taking a vector of character as input and returning
a vector of character as output. If not \code{NULL}, this function will be
used to determine the base paths from the \code{paths} when \code{method =
2} was specified.}

\item{sha1_digits}{number of digits used when \code{method = 2} is to be
applied}
}
\value{
vector of character as long as \code{paths}
}
\description{
Convert Long File Paths to Simple Paths
}
\examples{
paths <- c("v1_ugly_name_1.doc",  "v1_very_ugly_name.xml",
           "v2_ugly_name_1.docx", "v2_very_ugly_name.xmlx")
           
to_simple_names(paths, method = 1L)
writeLines(sort(to_simple_names(paths, method = 2L)))

# All sha1 are different because all base names (file name without extension
# by default) are different. If you want to give the same sha1 to files that 
# correspond to each other but have a different extension, set the function 
# that extracts the "base name" of the file:

get_base <- function(x) kwb.utils::removeExtension(gsub("^v\\\\d+_", "", x))

writeLines(sort(to_simple_names(paths, method = 2L, get_base = get_base)))

# Now the file names that have the same base name (neglecting the prefix 
# v1_ or v2_) get the same sha1 and thus appear as groups in the sorted 
# file list

}
